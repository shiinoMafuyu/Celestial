数据结构：(有点多，不用刻意都找出来，清理时遇到重要的添加进来即可)

1.角色：
charactor数组：totalDataMsg.data.charactor
一条charactor数据：
{
    "id": 1, 
    "name": "魔羽", 
    "level": 93, 
    "li_yz": 3, 
    "li_yzDK": 3, 
    "li_xy": 2.5, 
    "li_wg": 0.25, 
    "li_zmsh": 3, 
    "min_zm": 4, 
    "min_zmDK": 10.5, 
    "min_wg": 0.25, 
    "zhi_mg": 1, 
    "zhi_mf": 0.8, 
    "zhi_zmsh": 3, 
    "ti_hp": 30, 
    "ti_wf": 0.6, 
    "ti_xyDK": 2.5, 
    "li": 2100, 
    "min": 3160, 
    "zhi": 2948, 
    "ti": 2312
}

形如"li_yz"带"_"的key，表示转换量值：
li_yz:3,表示1力量转换得到3硬直。

2.属性转化map
由"charactor"数据转换而来，用于根据1级属性值计算2级属性。
key表示属性，
value数组表示里面对应的一级属性对这个值的加成。
{
    "yz": [{ "li": 3}],
    "yzDK": [{"li": 3}],
    "xy": [{"li": 2.5}],
    "wg": [{"li": 0.25}, {"min": 0.25}],
    "zmsh": [{"li": 3}, {"zhi": 3}],
    "zm": [{"min": 4}],
    "zmDK": [{"min": 10.5}],
    "mg": [{"zhi": 1}],
    "mf": [{"zhi": 0.8}],
    "hp": [{"ti": 30}],
    "wf": [{"ti": 0.6}],
    "xyDK": [{"ti": 2.5}]
}

3.positionMemory数据结构
{
    "eq00050001": {
        "positionId": "eq00050001", 
        "objs": {
            "0": {
                "equipmentArea": "equipment", 
                "id": "40", 
                "obj": {
                    "id": 40, 
                    "representId": "009300050001", 
                    "name": "高级智慧的强化护符", 
                    "level": 93, 
                    "zhi": 1130
                }
            }
        }
    }, 
    "eq00050002": {
        "positionId": "eq00050002", 
        "objs": {
            "0": {
                "equipmentArea": "equipment", 
                "id": "42", 
                "obj": {
                    "id": 42, 
                    "representId": "009300050001", 
                    "name": "健康的强化护符", 
                    "level": 93, 
                    "ti": 353
                }
            }
        }
    }
}
positionMemory在store中的保存如上所示，
一个位置的数据以第一个为例：
eq00050001:表示装备位置代表id，指明了装备所在位置，前面4个代表物品分类，后面4个数字当前类型里的位置信息。
objs:在这个位置的物品可能不止一个所以用objs表示，0代表根本属性，由于物品具有强化、附魔、刻印、龙玉、龙玉强化信息。
所以将以递归形式展示子obj的层次和位置，添加时每层添加一个"-"间隔。删除时，使用这个可避免递归查找。















